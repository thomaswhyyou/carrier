# References:
# https://dennisreimann.de/articles/phoenix-nginx-config.html

# Extract Phoenix app upstream for better readability
upstream phoenix {
  server 127.0.0.1:4000;
}

server {
  listen 80;

{% if app_domains is defined %}
  server_name {{ app_domains }};
{% else %}
  server_name _;
{% endif %}

  access_log {{ app_root_dir }}/log/nginx-access.log;
  error_log {{ app_root_dir }}/log/nginx-error.log;

{% if elb_health_endpoint is defined %}
  location {{ elb_health_endpoint }} {
    access_log off;
    proxy_pass http://phoenix;
  }
{% endif %}

  # For all other requests.
  location / {
    # Force redirect to https if http
    # https://aws.amazon.com/premiumsupport/knowledge-center/redirect-http-https-elb/
    # https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/#taxing-rewrites
    # https://serverfault.com/a/424016
    # https://www.nginx.com/resources/wiki/start/topics/depth/ifisevil/
    if ($http_x_forwarded_proto != "https") {
      return 301 https://$server_name$request_uri;
    }

    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # We don't want nginx trying to do something clever with redirects.
    proxy_set_header Host $http_host;
    proxy_redirect off;

    # Needed to use websockets and Phoenix channels.
    # Ref: https://www.nginx.com/blog/websocket-NGINX/
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    proxy_pass http://phoenix;
  }

}
